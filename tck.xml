<?xml version="1.0" encoding="UTF-8"?>
<specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://jboss.com/products/weld/tck/audit" xsi:schemaLocation="http://jboss.com/products/weld/tck/audit"
	name="JSR 354 Money and Currency" version="1.0.0" id="spectests"
	generateSectionIds="false">
	<section id="1" title="1 - Introduction" />
	<section id="2" title="2 - Use Cases" />
	<section id="3" title="3 - Requirements">
		<section id="3.1" title="Modularization Requirements">
			<section id="3.1.1" title="API">
				<assertion id="EnsureAmount">
					<text>Ensure at least one amount implementation is available.
					</text>
				</assertion>
				<assertion id="EnsureCurrencyUnit">
					<text>Ensure at least one currency implementation is available.
					</text>
				</assertion>
			</section>
			<section id="3.1.2" title="Integration">
				<assertion id="EnsureSetup">
					<text>Ensure the correct setup of the TCK, including the
						corresponding runtime scenarios.
					</text>
				</assertion>
			</section>
		</section>
		<section id="3.2" title="General Requirements">
			<assertion id="Backward Compatibility">
				<text>Ensure the backward compatibility with JDK6.
				</text>
			</assertion>
			<assertion id="EnsureMonetaryExceptions">
				<text>Ensure all Exceptions inherit directly, or indirectly from
					MonetaryException.
				</text>
			</assertion>
		</section>
		<section id="3.3" title="Core Requirements">
			<group>
				<text>CurrencyUnit Requirements</text>
				<assertion id="CUImplementsCU">
					<text>Currency implementations should implement CurrencyUnit and
						all required methods.
					</text>
				</assertion>
				<assertion id="CUSerializable">
					<text>Check if CurrencyUnit is serializable.
					</text>
				</assertion>
				<assertion id="CUImmutable">
					<text>Check if CurrencyUnit is immutable value type.
					</text>
				</assertion>
				<assertion id="CUEqualsHashCode">
					<text>Check if CurrencyUnit overrides correctly equals/hashCode.
					</text>
				</assertion>
				<assertion id="CUComparable">
					<text>Check if CurrencyUnit is comparable.
					</text>
				</assertion>
				<assertion id="CUISOCodesAvailable">
					<text>Access all ISO codes from the JDK are available out of the
						box..
					</text>
				</assertion>
				<assertion id="CUThreadsafe">
					<text>Check if CurrencyUnit is thread-safe.
					</text>
				</assertion>
				<assertion id="CUCodesAreUnique">
					<text>Access all codes: they must be unique.
					</text>
				</assertion>
				<assertion id="CUNumericCodesAreUnique">
					<text>Access all numeric codes, they must be
						unique, if defined.
					</text>
				</assertion>
			</group>
			
			<group>
				<text>MonetaryAmount Requirements</text>
				<assertion id="MABDImpl">
					<text>At least one BigDecimal based implementation of
						MonetaryAmount must be provided.
					</text>
				</assertion>
				<assertion id="MACurrency">
					<text>A CurrencyUnit must be contained within the MonetaryAmount
						implementations.
					</text>
				</assertion>
				<assertion id="MASignature">
					<text>A MonetaryAmount must implement the required interface.
					</text>
				</assertion>
				<assertion id="MAOperationalInheritance">
					<text>A MonetaryAmount must inherit its type to operation results.
					</text>
				</assertion>
				<assertion id="MAInterOp">
					<text>A MonetaryAmount must be interoperable with other
						implementations, and throw ArithmeticException when precision
						exceeds the
						capabilities.
					</text>
				</assertion>
				<assertion id="MACUMismatch">
					<text>A MonetaryAmount must throw CurrencyMismatch exception, if
						needed.
					</text>
				</assertion>
				<assertion id="MASerializable">
					<text>Check if MonetaryAmount is serializable.
					</text>
				</assertion>
				<assertion id="MAEqualsHashCode">
					<text>Check if MonetaryAmount overrides correctly equals/hashCode.
					</text>
				</assertion>
				<assertion id="MAComparable">
					<text>Check if MonetaryAmount is comparable.
					</text>
				</assertion>
				<assertion id="MAImmutable">
					<text>Check if MonetaryAmount is immutable value type.
					</text>
				</assertion>
				<assertion id="MAThreadsafe">
					<text>Check if MonetaryAmount is thread-safe.
					</text>
				</assertion>
			</group>
			<group>
				<text>Rounding Requirements</text>
				<assertion id="RRRoundingMode">
					<text>Rounding based on math.RoundingMode must be accessible.
					</text>
				</assertion>
				<assertion id="RRDefaultRounding4CU">
					<text>Ensure for all CurrencyUnits an according default Rounding is
						accessible.
					</text>
				</assertion>
				<assertion id="RRMathContext">
					<text>Rounding based on math.MathContext must be accessible.
					</text>
				</assertion>
			</group>
			<group>
				<text>MonetaryFunction Requirements</text>
				<assertion id="FuncAreFunctional">
					<text>Test all Monetary FunctionalInterfaces for compatibility with
						functional reqs.
					</text>
				</assertion>
			</group>
		</section>
		<section id="3.4" title="Conversion Requirements">
			<group>
				<text>Conversion Requirements</text>
				<assertion id="ConvRateType">
					<text>Ensure ExchangeRateType is identifyable/unique.
					</text>
				</assertion>
				<assertion id="ConvRateEquals">
					<text>Ensure ExchangeRateType implements equals/hashCode.
					</text>
				</assertion>
				<assertion id="ConvImmutable">
					<text>Ensure ExchangeRateType is immutable.
					</text>
				</assertion>
				<assertion id="ConvThreadSafe">
					<text>Ensure ExchangeRateType is thread-safe.
					</text>
				</assertion>
				<assertion id="ConvSerializable">
					<text>Ensure ExchangeRateType is Serializable.
					</text>
				</assertion>
				<assertion id="ConvComparable">
					<text>Ensure ExchangeRateType is Comparable.
					</text>
				</assertion>
				<assertion id="RateHasType">
					<text>Ensure ExchangeRate is bound to ExchangeRateType.
					</text>
				</assertion>
				<assertion id="RateHasType">
					<text>Ensure ExchangeRate has conversion factor.
					</text>
				</assertion>
				<assertion id="RateHasValidity">
					<text>Ensure ExchangeRate has a Validity.
					</text>
				</assertion>
				<assertion id="RateHasValidity">
					<text>Ensure ExchangeRate has a Validity.
					</text>
				</assertion>
				<assertion id="RateSerializable">
					<text>Check if ExchangeRate is serializable.
					</text>
				</assertion>
				<assertion id="RateEqualsHashCode">
					<text>Check if ExchangeRate overrides correctly equals/hashCode.
					</text>
				</assertion>
				<assertion id="RateComparable">
					<text>Check if ExchangeRate is comparable.
					</text>
				</assertion>
				<assertion id="RateImmutable">
					<text>Check if ExchangeRate is immutable value type.
					</text>
				</assertion>
				<assertion id="RateThreadsafe">
					<text>Check if ExchangeRate is thread-safe.
					</text>
				</assertion>
				<assertion id="RateHasProvider">
					<text>Check if ExchangeRate is provided by ExchangeRateProvider.
					</text>
				</assertion>
				<assertion id="RateHasProviders">
					<text>Check if ExchangeRateProvider are registered.
					</text>
				</assertion>
				<assertion id="RateCurrencyConverter">
					<text>Check CurrencyConverter.
					</text>
				</assertion>
				<assertion id="RateReversible">
					<text>Check for a reversible rate.
					</text>
				</assertion>
				<assertion id="MonetaryConversions">
					<text>Check MonetaryConversions singleton.
					</text>
				</assertion>
				<assertion id="MonetaryConversionsSingletonSpi">
					<text>Check MonetaryConversionsSpi is loaded.
					</text>
				</assertion>
				<assertion id="MonetaryConversionsSingletonSpiServiceLoading">
					<text>Check MonetaryConversionsSpi is loading ConversionProviders.
					</text>
				</assertion>
			</group>
			<section id="3.5" title="Formatting Requirements">

			</section>
			<section id="3.6" title="Extended Requirements">

			</section>
			<section id="3.7" title="Integration Requirements">

			</section>
			<section id="3.8" title="Non-Functional Requirements">

			</section>
		</section>
		<section id="4" title="Specification" level="2">
			<section id="4.1" title="Design Principles" />
			<section id="4.2" title="Package and Project Structure">
			</section>
			<section id="4.3" title="Platform API">
			</section>
			<section id="4.4" title="Formatting and Parsing API">
			</section>
			<section id="4.5" title="Formatting and Parsing SPI">
			</section>
			<section id="4.6" title="Conversion API">
			</section>
			<section id="4.7" title="Conversion SPI">
			</section>
			<section id="4.8" title="Extensions API">
			</section>
			<section id="4.9" title="Extensions SPI">
			</section>
		</section>
	</section>
</specification>